
### Fix Kazam codec issue
fix_kazam () {
	local fin=$(echo "$1" | cut -f 1 -d '.')
	local fout=${InFile}_out

	ffmpeg -y -i ${fin}.mp4 -c:v libx264 -c:a aac -strict experimental -tune fastdecode -pix_fmt yuv420p -b:a 192k -ar 48000 ${fout}.mp4
}

### Archive Extraction
# Usage : ex <file>
ex () {
    if [[ -f $1 ]]; then
        case $1 in
            *.tar.bz2)    tar xjf $1    ;;
            *.tar.gz)     tar xvzf $1   ;;
            *.bz2)        bunzip2 $1    ;;
            *.rar)        unrar x $1    ;;
            *.gz)         gunzip $1     ;;
            *.tar)        tar xf $1     ;;
            *.tbz2)       tar xjf $1    ;;
            *.tgz)        tar xzf $1    ;;
            *.zip)        unzip $1      ;;
            *.Z)          uncompress $1 ;;
            *.7z)         7z x $1       ;;
            *.deb)        ar x $1       ;;
            *.tar.xz)     tar xf $1     ;;
            *.tar.zst)    unzstd $1     ;;
            *)            echo "'$1' cannot be extracted via ex()" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}

### Show top n(default 10) processes eating up memory
# usage : psmem <number-of-processes>
psmem () {
    if [[ $1 =~ ^[0-9]+$ ]]; then
        ps -A -o user -o pid -o %mem | sort -nr -k 3 | head -$1
        echo -e "\nUse 'pcmd <pid>' to show the command running\n"
    else
        ps -A -o user -o pid -o %mem | sort -nr -k 3 | head -10
        echo -e "\nUse 'pcmd <pid>' to show the command running\n"
    fi
}

### Show top n(default 10) processes eating up cpu
# usage : pscpu <number-of-processes>
pscpu () {
    if [[ $1 =~ ^[0-9]+$ ]]; then
        ps -A -o user -o pid -o %cpu | sort -nr -k 3 | head -$1
        echo -e "\nUse 'pcmd <pid>' to show the command running\n"
    else
        ps -A -o user -o pid -o %cpu | sort -nr -k 3 | head -10
        echo -e "\nUse 'pcmd <pid>' to show the command running\n"
    fi
}

### Show process command from pid
# usage : pcmd <pid>
pcmd () {
    if [[ $1 =~ ^[0-9]+$ ]]; then
        ps -p $1 -o command=
    else
        echo "Usage : pcmd <pid>"
    fi
}

### Generate c++ source file from template - competitive programming
gt () {
    local file="$1"
    rm -f "$file"

    sed -e "s;%date%;$(date);g" $HOME/.config/nvim/templates/soln.cpp > "$file"
    vim +/solution $file
}