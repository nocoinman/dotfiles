repeat() {
    local start=1
    local end=${1:-80}
    local str="${2:-=}"
    local range=$(seq $start $end)
    for i in $range; do echo -n "${str}"; done
}

gpu_custom() {
    local mem_used=$(nvidia-smi --query-gpu=memory.used --format=csv,noheader,nounits)
    local mem_total=$(nvidia-smi --query-gpu=memory.total --format=csv,noheader,nounits)
    local mem_percent=$(nvidia-smi --query-gpu=utilization.gpu --format=csv,noheader,nounits)
    local elapsed_n=$((mem_percent*bar_length/100))

    echo -n "$(color 7)["
    repeat $elapsed_n $bar_char_elapsed
    repeat $((bar_length-elapsed_n)) $bar_char_total
    echo -n "] "

    echo "$(color ${reset})${mem_used}MiB / ${mem_total}MiB (${mem_percent}%)"
}

print_info() {
    info title
    info underline

    prin
    info "$(color 2)OS" distro
    info "$(color 2)├$(color 6) Kernel" kernel
    info "$(color 2)├$(color 6) Uptime" uptime
    info "$(color 2)└$(color 6) Packages" packages

    prin
    info "$(color 2)HW" model
    info "$(color 2)├$(color 6) CPU\t" cpu
    info "$(color 2)├$(color 6) Memory" memory
    prin "$(color 2)├$(color 6) GPU\t" "$(gpu_custom)"
    info "$(color 2)└$(color 6) Disk" disk
}

# OS
os_arch=""
uptime_shorthand="tiny"
package_managers="on"

# HW

## CPU
speed_type="scaling_cur_freq"
speed_shorthand="on"
cpu_brand="off"
cpu_speed="on"
cpu_cores="logical"
cpu_temp="on"
cpu_display="off"

## Memory
memory_percent="on"
memory_display="barinfo"

## Disk
disk_show=('/')
disk_subtitle="dir"
disk_display="barinfo"

# Misc

gtk_shorthand="off"
gtk2="on"
gtk3="on"
mpc_args=()
colors=(distro)
bold="on"
underline_enabled="on"
underline_char="-"
bar_char_elapsed="#"
bar_char_total="-"
separator="\t➜"
image_backend="off"
